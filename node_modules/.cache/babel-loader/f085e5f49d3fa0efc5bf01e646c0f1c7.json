{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react'; // custom hook function MUST start with 'use' in its name!\n\nconst useCounter = function () {\n  _s();\n\n  let forwards = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  // forward counter\n  const [counter, setCounter] = useState(0);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (forwards) {\n        setCounter(prevCounter => prevCounter + 1);\n      } else {\n        setCounter;\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []); // backwardcounter\n\n  return counter;\n};\n\n_s(useCounter, \"uPkTgB8PBsujXy6a5mXWSxFNaD8=\");\n\nexport default useCounter;","map":{"version":3,"names":["useState","useEffect","useCounter","forwards","counter","setCounter","interval","setInterval","prevCounter","clearInterval"],"sources":["/home/kfederer/code/federerkristijan/07-react-custom-hooks/src/hooks/useCounter.js"],"sourcesContent":["import { useState, useEffect }\n from 'react';\n\n// custom hook function MUST start with 'use' in its name!\nconst useCounter = (forwards = true) => {\n  // forward counter\n  const [counter, setCounter] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (forwards) {\n        setCounter((prevCounter) => prevCounter + 1);\n      } else {\n        setCounter\n      }\n\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // backwardcounter\n\n  return counter;\n};\n\nexport default useCounter;\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QACM,OADN,C,CAGA;;AACA,MAAMC,UAAU,GAAG,YAAqB;EAAA;;EAAA,IAApBC,QAAoB,uEAAT,IAAS;EACtC;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,CAAD,CAAtC;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMK,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,IAAIJ,QAAJ,EAAc;QACZE,UAAU,CAAEG,WAAD,IAAiBA,WAAW,GAAG,CAAhC,CAAV;MACD,CAFD,MAEO;QACLH,UAAU;MACX;IAEF,CAP2B,EAOzB,IAPyB,CAA5B;IASA,OAAO,MAAMI,aAAa,CAACH,QAAD,CAA1B;EACD,CAXQ,EAWN,EAXM,CAAT,CAJsC,CAiBtC;;EAEA,OAAOF,OAAP;AACD,CApBD;;GAAMF,U;;AAsBN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}