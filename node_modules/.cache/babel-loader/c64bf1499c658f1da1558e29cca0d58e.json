{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react'; // custom hook function MUST start with 'use' in its name!\n\nconst useCounter = forwards => {\n  _s();\n\n  // forward counter\n  const [counter, setCounter] = useState(0);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCounter(prevCounter => prevCounter + 1);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []); // backwardcounter\n\n  return counter;\n};\n\n_s(useCounter, \"uPkTgB8PBsujXy6a5mXWSxFNaD8=\");\n\nexport default useCounter;","map":{"version":3,"names":["useState","useEffect","useCounter","forwards","counter","setCounter","interval","setInterval","prevCounter","clearInterval"],"sources":["/home/kfederer/code/federerkristijan/07-react-custom-hooks/src/hooks/useCounter.js"],"sourcesContent":["import { useState, useEffect }\n from 'react';\n\n// custom hook function MUST start with 'use' in its name!\nconst useCounter = (forwards ) => {\n  // forward counter\n  const [counter, setCounter] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCounter((prevCounter) => prevCounter + 1);\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // backwardcounter\n\n  return counter;\n};\n\nexport default useCounter;\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QACM,OADN,C,CAGA;;AACA,MAAMC,UAAU,GAAIC,QAAD,IAAe;EAAA;;EAChC;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,CAAD,CAAtC;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMK,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCF,UAAU,CAAEG,WAAD,IAAiBA,WAAW,GAAG,CAAhC,CAAV;IACD,CAF2B,EAEzB,IAFyB,CAA5B;IAIA,OAAO,MAAMC,aAAa,CAACH,QAAD,CAA1B;EACD,CANQ,EAMN,EANM,CAAT,CAJgC,CAYhC;;EAEA,OAAOF,OAAP;AACD,CAfD;;GAAMF,U;;AAiBN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}